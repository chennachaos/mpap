      subroutine inv_tensor(A,invA,P)
      implicit none
      integer i, j, P(6)
      double precision A(6,6), tinvA(6),invA(6,6), e(1000),
     *  r1, r2, r1d2
      r1 = 1.d0
	r2= 2.d0
	r1d2=r1/r2

      do i=1,6
        call pzero(e,6)
        e(i) = r1
		if(i.gt.3) then
		e(i) = r1d2
		endif

        call solve_matrix(A,P,e,tinvA,6)

		do j=1,3
		invA(j,i)=tinvA(j)
		enddo
		do j=4,6
		invA(j,i)=r1d2*tinvA(j)
		enddo
      enddo

      return
      end

c
c=============================================================================
c  double contraction product eines symmetrischen zweistufigen Tensors 
c  mit einem Tensor 4.Stufe -> symmetrischen Tensor 2.Stufe
c-----------------------------------------------------------------------------
      subroutine multx_s_s4_p(S,A,X)
      implicit none
      double precision A(6), X(6,6), S(6), r2
      r2 = 2.d0
        S(1)   =	A(1)*X(1,1) + A(2)*X(2,1) + A(3)*X(3,1)
        S(2)   =	A(1)*X(1,2) + A(2)*X(2,2) + A(3)*X(3,2)
        S(3)   =	A(1)*X(1,3) + A(2)*X(2,3) + A(3)*X(3,3)
        S(4)   =	r2 * A(4)*X(4,4)
        S(5)   =	r2 * A(5)*X(5,5)
        S(6)   =	r2 * A(6)*X(6,6)
      return
      end
c-----------------------------------------------------------------------------
      subroutine multx_s_s4_m(S,A,X)
      implicit none
      double precision A(6), X(6,6), S(6), r2
      r2 = 2.d0
        S(1)   =	-(A(1)*X(1,1) + A(2)*X(2,1) + A(3)*X(3,1))
        S(2)   =	-(A(1)*X(1,2) + A(2)*X(2,2) + A(3)*X(3,2))
        S(3)   =	-(A(1)*X(1,3) + A(2)*X(2,3) + A(3)*X(3,3))
        S(4)   =	-(r2 * A(4)*X(4,4))
        S(5)   =	-(r2 * A(5)*X(5,5))
        S(6)   =	-(r2 * A(6)*X(6,6))
      return
      end
c-----------------------------------------------------------------------------
      subroutine multx_s_s4_f(S,A,X,fact)
      implicit none
      double precision A(6), X(6,6), S(6), fact, r2
      r2 = 2.d0
        S(1)   =	fact*(A(1)*X(1,1) + A(2)*X(2,1) + A(3)*X(3,1))
        S(2)   =	fact*(A(1)*X(1,2) + A(2)*X(2,2) + A(3)*X(3,2))
        S(3)   =	fact*(A(1)*X(1,3) + A(2)*X(2,3) + A(3)*X(3,3))
        S(4)   =	fact*(r2 * A(4)*X(4,4))
        S(5)   =	fact*(r2 * A(5)*X(5,5))
        S(6)   =	fact*(r2 * A(6)*X(6,6))
      return
      end
c-----------------------------------------------------------------------------
      subroutine multx_s_s4_ap(S,A,X)
      implicit none
      double precision A(6), X(6,6), S(6), r2
      r2 = 2.d0
        S(1)   =	S(1)+(A(1)*X(1,1) + A(2)*X(2,1) + A(3)*X(3,1))
        S(2)   =	S(2)+(A(1)*X(1,2) + A(2)*X(2,2) + A(3)*X(3,2))
        S(3)   =	S(3)+(A(1)*X(1,3) + A(2)*X(2,3) + A(3)*X(3,3))
        S(4)   =	S(4)+(r2 * A(4)*X(4,4))
        S(5)   =	S(5)+(r2 * A(5)*X(5,5))
        S(6)   =	S(6)+(r2 * A(6)*X(6,6))
      return
      end
c-----------------------------------------------------------------------------
      subroutine multx_s_s4_am(S,A,X)
      implicit none
      double precision A(6), X(6,6), S(6), r2
      r2 = 2.d0
        S(1)   =	S(1)-(A(1)*X(1,1) + A(2)*X(2,1) + A(3)*X(3,1))
        S(2)   =	S(2)-(A(1)*X(1,2) + A(2)*X(2,2) + A(3)*X(3,2))
        S(3)   =	S(3)-(A(1)*X(1,3) + A(2)*X(2,3) + A(3)*X(3,3))
        S(4)   =	S(4)-(r2 * A(4)*X(4,4))
        S(5)   =	S(5)-(r2 * A(5)*X(5,5))
        S(6)   =	S(6)-(r2 * A(6)*X(6,6))
	return
      end
c-----------------------------------------------------------------------------
      subroutine multx_s_s4_af(S,A,X,fact)
      implicit none
      double precision A(6), X(6,6), S(6), fact, r2
      r2 = 2.d0
        S(1)= S(1)+fact*(A(1)*X(1,1) + A(2)*X(2,1) + A(3)*X(3,1))
        S(2)= S(2)+fact*(A(1)*X(1,2) + A(2)*X(2,2) + A(3)*X(3,2))
        S(3)= S(3)+fact*(A(1)*X(1,3) + A(2)*X(2,3) + A(3)*X(3,3))
        S(4)= S(4)+fact*(r2 * A(4)*X(4,4))
        S(5)= S(5)+fact*(r2 * A(5)*X(5,5))
        S(6)= S(6)+fact*(r2 * A(6)*X(6,6))
      return
      end
c
c=============================================================================
c  double contraction product eines Tensors 4.Stufe mit einem symmetrischen 
c  zweistufigen Tensor -> symmetrischen Tensor 2.Stufe
c-----------------------------------------------------------------------------
      subroutine multx_s_4s_p(S,X,A)
      implicit none
      double precision X(6,6), A(6), S(6), r2
      r2 = 2.d0
        S(1) =	X(1,1)*A(1) + X(1,2)*A(2) + X(1,3)*A(3)
        S(2) =	X(2,1)*A(1) + X(2,2)*A(2) + X(2,3)*A(3)
        S(3) =	X(3,1)*A(1) + X(3,2)*A(2) + X(3,3)*A(3)
        S(4) =	r2 * X(4,4)*A(4)
        S(5) =	r2 * X(5,5)*A(5)
        S(6) =	r2 * X(6,6)*A(6)
      return
      end
c-----------------------------------------------------------------------------
      subroutine multx_s_4s_m(S,X,A)
      implicit none
      double precision X(6,6), A(6), S(6), r2
      r2 = 2.d0
        S(1) =	-(X(1,1)*A(1) + X(1,2)*A(2) + X(1,3)*A(3))
        S(2) =	-(X(2,1)*A(1) + X(2,2)*A(2) + X(2,3)*A(3))
        S(3) =	-(X(3,1)*A(1) + X(3,2)*A(2) + X(3,3)*A(3))
        S(4) =	-(r2 * X(4,4)*A(4))
        S(5) =	-(r2 * X(5,5)*A(5))
        S(6) =	-(r2 * X(6,6)*A(6))
      return
      end
c-----------------------------------------------------------------------------
      subroutine multx_s_4s_f(S,X,A,fact)
      implicit none
      double precision X(6,6), A(6), S(6), fact, r2
      r2 = 2.d0
        S(1) =	fact*(X(1,1)*A(1) + X(1,2)*A(2) + X(1,3)*A(3))
        S(2) =	fact*(X(2,1)*A(1) + X(2,2)*A(2) + X(2,3)*A(3))
        S(3) =	fact*(X(3,1)*A(1) + X(3,2)*A(2) + X(3,3)*A(3))
        S(4) =	fact*(r2 * X(4,4)*A(4))
        S(5) =	fact*(r2 * X(5,5)*A(5))
        S(6) =	fact*(r2 * X(6,6)*A(6))
      return
      end
c-----------------------------------------------------------------------------
      subroutine multx_s_4s_ap(S,X,A)
      implicit none
      double precision X(6,6), A(6), S(6), r2
      r2 = 2.d0
        S(1) =	S(1)+(X(1,1)*A(1) + X(1,2)*A(2) + X(1,3)*A(3))
        S(2) =	S(2)+(X(2,1)*A(1) + X(2,2)*A(2) + X(2,3)*A(3))
        S(3) =	S(3)+(X(3,1)*A(1) + X(3,2)*A(2) + X(3,3)*A(3))
        S(4) =	S(4)+(r2 * X(4,4)*A(4))
        S(5) =	S(5)+(r2 * X(5,5)*A(5))
        S(6) =	S(6)+(r2 * X(6,6)*A(6))
      return
      end
c-----------------------------------------------------------------------------
      subroutine multx_s_4s_am(S,X,A)
      implicit none
      double precision X(6,6), A(6), S(6), r2
      r2 = 2.d0
        S(1) =	S(1)-(X(1,1)*A(1) + X(1,2)*A(2) + X(1,3)*A(3))
        S(2) =	S(2)-(X(2,1)*A(1) + X(2,2)*A(2) + X(2,3)*A(3))
        S(3) =	S(3)-(X(3,1)*A(1) + X(3,2)*A(2) + X(3,3)*A(3))
        S(4) =	S(4)-(r2 * X(4,4)*A(4))
        S(5) =	S(5)-(r2 * X(5,5)*A(5))
        S(6) =	S(6)-(r2 * X(6,6)*A(6))
      return
      end
c-----------------------------------------------------------------------------
      subroutine multx_s_4s_af(S,X,A,fact)
      implicit none
       double precision X(6,6), A(6), S(6), fact, r2
      r2 = 2.d0
        S(1) =	S(1)+fact*(X(1,1)*A(1) + X(1,2)*A(2) + X(1,3)*A(3))
        S(2) =	S(2)+fact*(X(2,1)*A(1) + X(2,2)*A(2) + X(2,3)*A(3))
        S(3) =	S(3)+fact*(X(3,1)*A(1) + X(3,2)*A(2) + X(3,3)*A(3))
        S(4) =	S(4)+fact*(r2 * X(4,4)*A(4))
        S(5) =	S(5)+fact*(r2 * X(5,5)*A(5))
        S(6) =	S(6)+fact*(r2 * X(6,6)*A(6))
      return
      end
c-----------------------------------------------------------------------------
      subroutine mult_s_4u_p(S,X,A)
      implicit none
      double precision A(3,3), X(6,6), S(6)
        S(1) = 	X(1,1)*A(1,1)+X(1,2)*A(2,2)+X(1,3)*A(3,3)
     *		+X(1,4)*(A(1,2)+A(2,1))+X(1,5)*(A(2,3)+A(3,2))
     *		+X(1,6)*(A(1,3)+A(3,1))
        S(2) = 	X(2,1)*A(1,1)+X(2,2)*A(2,2)+X(2,3)*A(3,3)
     *		+X(2,4)*(A(2,1)+A(1,2))+X(2,5)*(A(2,3)+A(3,2))
     *		+X(2,6)*(A(3,1)+A(1,3))
        S(3) = 	X(3,1)*A(1,1)+X(3,2)*A(2,2)+X(3,3)*A(3,3)
     *		+X(3,4)*(A(1,2)+A(2,1))+X(3,5)*(A(2,3)+A(3,2))
     *		+X(3,6)*(A(3,1)+A(1,3))
        S(4) = 	X(4,1)*A(1,1)+X(4,2)*A(2,2)+X(4,3)*A(3,3)
     *		+X(4,4)*(A(1,2)+A(2,1))+X(4,5)*(A(2,3)+A(3,2))
     *		+X(4,6)*(A(1,3)+A(3,1))
        S(5) = 	X(5,1)*A(1,1)+X(5,2)*A(2,2)+X(5,3)*A(3,3)
     *		+X(5,4)*(A(1,2)+A(2,1))+X(5,5)*(A(2,3)+A(3,2))
     *		+X(5,6)*(A(3,1)+A(1,3))
        S(6) = 	X(6,1)*A(1,1)+X(6,2)*A(2,2)+X(6,3)*A(3,3)
     *		+X(6,4)*(A(1,2)+A(2,1))+X(6,5)*(A(3,2)+A(2,3))
     *		+X(6,6)*(A(3,1)+A(1,3))
      return
      end
c-----------------------------------------------------------------------------
      subroutine multx_s_4u_p(S,X,A)
      implicit none
      double precision A(3,3), X(6,6), S(6)
	S(1) = X(1,1)*A(1,1)+X(1,2)*A(2,2)+X(1,3)*A(3,3)
	S(2) = X(2,1)*A(1,1)+X(2,2)*A(2,2)+X(2,3)*A(3,3)
	S(3) = X(3,1)*A(1,1)+X(3,2)*A(2,2)+X(3,3)*A(3,3)
	S(4) = X(4,4)*(A(1,2)+A(2,1))
	S(5) = X(5,5)*(A(2,3)+A(3,2))
	S(6) = X(6,6)*(A(3,1)+A(1,3))
      return
      end
c-----------------------------------------------------------------------------
      subroutine multx_s_4u_m(S,X,A)
      implicit none
      double precision X(6,6), A(3,3), S(6)
 	S(1) = -(X(1,1)*A(1,1)+X(1,2)*A(2,2)+X(1,3)*A(3,3))
	S(2) = -(X(2,1)*A(1,1)+X(2,2)*A(2,2)+X(2,3)*A(3,3))
	S(3) = -(X(3,1)*A(1,1)+X(3,2)*A(2,2)+X(3,3)*A(3,3))
	S(4) = -(X(4,4)*(A(1,2)+A(2,1)))
	S(5) = -(X(5,5)*(A(2,3)+A(3,2)))
	S(6) = -(X(6,6)*(A(3,1)+A(1,3)))
	return
      end
c-----------------------------------------------------------------------------
      subroutine multx_s_4u_f(S,X,A,fact)
      implicit none
      double precision X(6,6), A(3,3), S(6), fact
 	S(1) = fact*(X(1,1)*A(1,1)+X(1,2)*A(2,2)+X(1,3)*A(3,3))
	S(2) = fact*(X(2,1)*A(1,1)+X(2,2)*A(2,2)+X(2,3)*A(3,3))
	S(3) = fact*(X(3,1)*A(1,1)+X(3,2)*A(2,2)+X(3,3)*A(3,3))
	S(4) = fact*(X(4,4)*(A(1,2)+A(2,1)))
	S(5) = fact*(X(5,5)*(A(2,3)+A(3,2)))
	S(6) = fact*(X(6,6)*(A(3,1)+A(1,3)))
      return
      end
c-----------------------------------------------------------------------------
      subroutine multx_s_4u_ap(S,X,A)
      implicit none
      double precision X(6,6), A(3,3), S(6)
 	S(1) = S(1)+(X(1,1)*A(1,1)+X(1,2)*A(2,2)+X(1,3)*A(3,3))
	S(2) = S(2)+(X(2,1)*A(1,1)+X(2,2)*A(2,2)+X(2,3)*A(3,3))
	S(3) = S(3)+(X(3,1)*A(1,1)+X(3,2)*A(2,2)+X(3,3)*A(3,3))
	S(4) = S(4)+(X(4,4)*(A(1,2)+A(2,1)))
	S(5) = S(5)+(X(5,5)*(A(2,3)+A(3,2)))
	S(6) = S(6)+(X(6,6)*(A(3,1)+A(1,3)))
      return
      end
c-----------------------------------------------------------------------------
      subroutine multx_s_4u_am(S,X,A)
      implicit none
        double precision X(6,6), A(3,3), S(6)
 	S(1) = S(1)-(X(1,1)*A(1,1)+X(1,2)*A(2,2)+X(1,3)*A(3,3))
	S(2) = S(2)-(X(2,1)*A(1,1)+X(2,2)*A(2,2)+X(2,3)*A(3,3))
	S(3) = S(3)-(X(3,1)*A(1,1)+X(3,2)*A(2,2)+X(3,3)*A(3,3))
	S(4) = S(4)-(X(4,4)*(A(1,2)+A(2,1)))
	S(5) = S(5)-(X(5,5)*(A(2,3)+A(3,2)))
	S(6) = S(6)-(X(6,6)*(A(3,1)+A(1,3)))
      return
      end
c-----------------------------------------------------------------------------
      subroutine multx_s_4u_af(S,X,A,fact)
      implicit none
      double precision X(6,6), A(3,3), S(6), fact
 	S(1) = S(1)+fact*(X(1,1)*A(1,1)+X(1,2)*A(2,2)+X(1,3)*A(3,3))
	S(2) = S(2)+fact*(X(2,1)*A(1,1)+X(2,2)*A(2,2)+X(2,3)*A(3,3))
	S(3) = S(3)+fact*(X(3,1)*A(1,1)+X(3,2)*A(2,2)+X(3,3)*A(3,3))
	S(4) = S(4)+fact*(X(4,4)*(A(1,2)+A(2,1)))
	S(5) = S(5)+fact*(X(5,5)*(A(2,3)+A(3,2)))
	S(6) = S(6)+fact*(X(6,6)*(A(3,1)+A(1,3)))
      return
      end

	subroutine mult_s_4u_af(S,X,A,fact)
      implicit none
         double precision A(3,3), X(6,6), S(6), fact
        S(1) = S(1)+fact*(X(1,1)*A(1,1)+X(1,2)*A(2,2)+X(1,3)*A(3,3)
     *		+X(1,4)*(A(1,2)+A(2,1))+X(1,5)*(A(2,3)+A(3,2))
     *		+X(1,6)*(A(1,3)+A(3,1)))
        S(2) = S(2)+fact*(X(2,1)*A(1,1)+X(2,2)*A(2,2)+X(2,3)*A(3,3)
     *		+X(2,4)*(A(2,1)+A(1,2))+X(2,5)*(A(2,3)+A(3,2))
     *		+X(2,6)*(A(3,1)+A(1,3)))
        S(3) = S(3)+fact*(X(3,1)*A(1,1)+X(3,2)*A(2,2)+X(3,3)*A(3,3)
     *		+X(3,4)*(A(1,2)+A(2,1))+X(3,5)*(A(2,3)+A(3,2))
     *		+X(3,6)*(A(3,1)+A(1,3)))
        S(4) = S(4)+fact*(X(4,1)*A(1,1)+X(4,2)*A(2,2)+X(4,3)*A(3,3)
     *		+X(4,4)*(A(1,2)+A(2,1))+X(4,5)*(A(2,3)+A(3,2))
     *		+X(4,6)*(A(1,3)+A(3,1)))
        S(5) = S(5)+fact*(X(5,1)*A(1,1)+X(5,2)*A(2,2)+X(5,3)*A(3,3)
     *		+X(5,4)*(A(1,2)+A(2,1))+X(5,5)*(A(2,3)+A(3,2))
     *		+X(5,6)*(A(3,1)+A(1,3)))
        S(6) = S(6)+fact*(X(6,1)*A(1,1)+X(6,2)*A(2,2)+X(6,3)*A(3,3)
     *		+X(6,4)*(A(1,2)+A(2,1))+X(6,5)*(A(3,2)+A(2,3))
     *		+X(6,6)*(A(3,1)+A(1,3)))
      return
      end
c





